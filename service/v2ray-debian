#!/bin/bash

#
### BEGIN INIT INFO
# Provides:          v2ray
# Required-Start:    $network $local_fs $remote_fs
# Required-Stop:     $network $local_fs $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Fast tunnel proxy that helps you bypass firewalls
# Description:       Start or stop the v2ray server
### END INIT INFO
#
# Author: QuNiu
#


# main
PANEL_NAME=ssrpanel-v2ray
V2RAY_NAME=v2ray
PANEL_CONF=ssrpanel-v2ray.jar
PANEL_DIR=/usr/local/ssrpanel-v2ray/
JAVA_BIN=/usr/bin/java

RETVAL=0


check_running(){
    PANEL_PID=$(ps -aux | grep -v grep | grep -i "${PANEL_CONF}" | awk '{print $2}')
    if [ -n "$PANEL_PID" ]; then
        return 0
    else
        return 1
    fi
}

do_start(){
    check_running
    if [ $? -eq 0 ]; then
        echo "$PANEL_NAME (pid $PANEL_PID) is already running..."
        exit 0
    else
        cd $PANEL_DIR
        nohup $JAVA_BIN -jar $PANEL_CONF >> /dev/null 2>&1 &
        RETVAL=$?
        if [ $RETVAL -eq 0 ]; then
            echo "Starting $PANEL_NAME $V2RAY_NAME success!"
        else
            echo "Starting $PANEL_NAME $V2RAY_NAME failed!"
        fi
    fi
}

do_stop(){
    check_running
    if [ $? -eq 0 ]; then
        kill -s 9 $PANEL_PID
        V2RAY_VER=$(wget --no-check-certificate -qO- https://api.github.com/repos/v2ray/v2ray-core/releases/latest | grep 'tag_name' | cut -d\" -f4)
        V2RAY_PID=$(ps -ef | grep -v grep | grep "$V2RAY_VER/v2ray" | awk '{print $2}')
        if [ -n "$V2RAY_PID" ]; then
            kill -s 9 $V2RAY_PID
        else
            ps -ef | grep "/v2ray" | grep -v grep | awk '{print $2}' | xargs kill -s 9
        fi
        echo "Stopping $PANEL_NAME $V2RAY_NAME success!"
    else
        echo "$PANEL_NAME $V2RAY_NAME is stopped"
        RETVAL=1
    fi
}

do_status(){
    check_running
    if [ $? -eq 0 ]; then
        echo "$PANEL_NAME (pid $PANEL_PID) is running..."
    else
        echo "$PANEL_NAME $V2RAY_NAME is stopped"
        RETVAL=1
    fi
}

do_restart(){
    do_stop
    sleep 0.5
    do_start
}

case "$1" in
    start|stop|restart|status)
    do_$1
    ;;
    *)
    echo "Usage: $0 { start | stop | restart | status }"
    RETVAL=1
    ;;
esac

exit $RETVAL
